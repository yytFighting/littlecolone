{"version":3,"sources":["components/add.jsx","App.js","serviceWorker.js","index.js"],"names":["Add","state","selectmsg","color","check","tagindex","tags","name","isadd","tagsshow","istaghave","rewritingmsg","rewriting","adding","items","i","push","type","id","checked","this","value","className","onChange","e","radiochange","htmlFor","CheckOutlined","tagsrewrite","onClick","stopPropagation","placeholder","size","tagdelete","tagchanged","tagshow","map","item","index","addtohead","key","rewrite","EditFilled","addtag","outtagpage","show","selectmsgchange","addtaghead","some","PlusCircleFilled","style","fontSize","addCom","hide","todelete","CloseCircleFilled","setState","console","log","splice","target","findtag","msg","arr","forEach","includes","length","newtag","sitem","slice","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcf2125d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Button } from \"antd\";\r\nimport \"../App.scss\";\r\nimport {PlusCircleFilled} from '@ant-design/icons'\r\nimport {EditFilled } from '@ant-design/icons'\r\nimport {CheckOutlined} from '@ant-design/icons'\r\nimport {CloseCircleFilled} from '@ant-design/icons'\r\nclass Add extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectmsg: \"\",\r\n      // ----------所有的背景颜色\r\n      color: [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\"],\r\n      // -----------颜色选择\r\n      check: 1,\r\n      //   --------------------总的标签\r\n      tagindex:0,\r\n      tags: [\r\n        {\r\n          name: \"紧急\",\r\n          color: \"b2\",\r\n          isadd: false,\r\n        },\r\n      ],\r\n      // -----------------显示的标签\r\n      tagsshow: [],\r\n      // -----------------在标签框查询时判断有无标签存在\r\n      istaghave: true,\r\n      // ----------------修改标签时暂存的数据\r\n      rewritingmsg: {},\r\n      // ---------------是否正在修概述局，调出数据修改框\r\n      rewriting: false,\r\n\r\n      //标签编辑模板\r\n      adding: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var items = [];\r\n    for (var i = 0; i < 7; i++) {\r\n      items.push(\r\n        <input\r\n          type=\"radio\"\r\n          id={\"t\" + (i + 1)}\r\n          name=\"color\"\r\n          checked={this.state.check === i + 1}\r\n          value={i + 1}\r\n          className=\"itemradio\"\r\n          onChange={(e) => this.radiochange(e)}\r\n          \r\n        />\r\n      );\r\n      items.push(\r\n        <label \r\n          htmlFor={\"t\" + (i + 1)}\r\n          className={\"itemlabel \" + this.state.color[i]}\r\n        >\r\n         {this.state.check == (i + 1)?<CheckOutlined />:''}\r\n        </label>\r\n      );\r\n    }\r\n    var tagsrewrite = (\r\n      <div\r\n        className=\"changetag\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"itemhead\">添加标签</div>\r\n        <div className=\"iteminput\">\r\n          <Input\r\n            placeholder=\"Basic usage\"\r\n            className=\"itemin\"\r\n            value={this.state.rewritingmsg.name}\r\n            onChange={(e) => this.rewritingmsg(e)}\r\n          />\r\n        </div>\r\n        <div className=\"itemchange\">{items}</div>\r\n        <div className=\"itemselect\">\r\n          <Button\r\n            size=\"large\"\r\n            className=\"bt bt1\"\r\n            onClick={() => this.tagdelete()}\r\n          >\r\n            删除\r\n          </Button>\r\n          <Button\r\n            size=\"large\"\r\n            className=\"bt bt2\"\r\n            onClick={() => this.tagchanged()}\r\n          >\r\n            完成\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n    var tagshow = this.state.tagsshow.map((item, index) => {\r\n      return (\r\n        <div\r\n          className=\"itemlist\"\r\n          onClick={() => this.addtohead(item)}\r\n          key={item.name}\r\n        >\r\n          <div className={item.color + \" item1\"}></div>{\" \"}\r\n          <div className=\"item2\">{item.name}</div>{\" \"}\r\n          <div className=\"item3\" onClick={(e) => this.rewrite(e, item, index)}>\r\n          <EditFilled />\r\n          </div>\r\n      <div className=\"item4\">{item.isadd?<CheckOutlined />:''}</div>\r\n        </div>\r\n      );\r\n    });\r\n    var addtag = (\r\n      <div className=\"createtag\">\r\n        <div className=\"itemed\">{items}</div>\r\n        <div className=\"itembt\">\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.addtag()}\r\n            className=\"bt\"\r\n          >\r\n            创建标签\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n    var outtagpage = (\r\n      <div onClick={(e) => this.show(e)} className=\"addtag\">\r\n        <Input\r\n          placeholder=\"Basic usage\"\r\n          value={this.state.selectmsg}\r\n          onChange={(e) => this.selectmsgchange(e)}\r\n        />\r\n        {this.state.istaghave ? tagshow : addtag}\r\n      </div>\r\n    );\r\n    var addtaghead = (\r\n      <div  className=\"addtaghead\">\r\n        <div className=\"topadd\">\r\n        {\r\n          this.state.tags.some((item)=>{\r\n            if(item.isadd){\r\n              return true\r\n            }\r\n          })?<PlusCircleFilled style={{fontSize:\"25px\"}} onClick={(e) => this.addCom(e)} className=\"btadd\"/>:<div onClick={(e) => this.addCom(e)}>添加标签</div>\r\n        }\r\n          {this.state.adding\r\n            ? this.state.rewriting\r\n              ? tagsrewrite\r\n              : outtagpage\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div onClick={(e) => this.hide(e)} id=\"main\">\r\n        <div className=\"headtag\">\r\n          {this.state.tags.map((item, index) => {\r\n            if (item.isadd === true) {\r\n              return (\r\n                <div className={\"item \" + item.color} key={item.name}>\r\n                  {item.name}{\" \"}\r\n                  <div className=\"delete\" onClick={() => this.todelete(index)}>\r\n                  <CloseCircleFilled />\r\n                  </div>\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          {addtaghead}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentWillMount() {\r\n    this.setState({\r\n      tagsshow: this.state.tags,\r\n    });\r\n  }\r\n  tagdelete() {\r\n    console.log(\"你选择了删除\");\r\n    this.state.tags.splice(this.state.rewritingmsg.index, 1);\r\n    this.setState({\r\n      tags: this.state.tags,\r\n      rewriting: false,\r\n    });\r\n  }\r\n  tagchanged() {\r\n    console.log(this.state.rewritingmsg);\r\n    this.state.tags[this.state.rewritingmsg.index].name = this.state.rewritingmsg.name;\r\n    this.state.tags[this.state.rewritingmsg.index].color = this.state.color[\r\n      this.state.check - 1\r\n    ];\r\n    // this.state.tag[this.state.rewritingmsg.index].name=this.state.rewritingmsg.name\r\n    this.setState({\r\n      tags: this.state.tags,\r\n      rewriting: false,\r\n    });\r\n  }\r\n  selectmsgchange(e) {\r\n    this.setState({\r\n      selectmsg: e.target.value,\r\n    });\r\n    this.findtag(e.target.value);\r\n  }\r\n  findtag(msg) {\r\n    console.log(\"ddsad----------------\")\r\n    if (msg === \"\") {\r\n      console.log(\"ddsaddsadasdas----------------\")\r\n      this.setState({\r\n        tagsshow: this.state.tags,\r\n        istaghave:true\r\n      });\r\n    } else {\r\n      let arr = [];\r\n      this.state.tags.forEach((item) => {\r\n        if (item.name.includes(msg)) {\r\n          arr.push(item);\r\n        }\r\n      });\r\n      if (arr.length !== 0) {\r\n        this.setState({\r\n          tagsshow: arr,\r\n          istaghave: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          istaghave: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  rewritingmsg(e) {\r\n    this.state.rewritingmsg.name = e.target.value;\r\n    this.setState({\r\n      rewritingmsg: this.state.rewritingmsg,\r\n    });\r\n  }\r\n  addtag() {\r\n    console.log(this.state.selectmsg);\r\n    console.log(this.state.check);\r\n    var newtag = {\r\n      name: this.state.selectmsg,\r\n      color: this.state.color[this.state.check - 1],\r\n      isadd: true,\r\n    };\r\n    this.state.tags.push(newtag);\r\n    this.setState({\r\n      selectmsg: \"\",\r\n      istaghave: true,\r\n      tagsshow: this.state.tags,\r\n    });\r\n  }\r\n  todelete(index) {\r\n    this.state.tags[index].isadd = false;\r\n    this.setState({\r\n      tags: this.state.tags,\r\n    });\r\n  }\r\n  addtohead(item) {\r\n    this.state.tags.forEach((sitem, index) => {\r\n      if (sitem.name === item.name) {\r\n        this.state.tags[index].isadd = true;\r\n        this.setState({\r\n          tags: this.state.tags,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  // --------------当点击标签修改时触发的事件，在此事件里要获取到当前的标签信息\r\n  rewrite(e, item, index) {\r\n    console.log(item);\r\n    this.state.rewritingmsg.name = item.name;\r\n    this.state.rewritingmsg.color = item.color;\r\n    this.state.rewritingmsg.isadd = item.isadd;\r\n    this.state.rewritingmsg.index = index;\r\n    this.setState({\r\n      rewriting: true,\r\n      rewritingmsg: this.state.rewritingmsg,\r\n      check: item.color.slice(-1),\r\n    });\r\n    e.stopPropagation();\r\n  }\r\n  radiochange(e) {\r\n    this.setState({\r\n      check: e.target.value,\r\n    });\r\n  }\r\n  addCom(e) {\r\n    console.log(e.target);\r\n    this.setState({\r\n      adding: true,\r\n    });\r\n    e.stopPropagation();\r\n  }\r\n  // ------------阻止标签栏的冒泡\r\n  show(e) {\r\n    e.stopPropagation();\r\n  }\r\n  hide(e) {\r\n    console.log(\"yyt\");\r\n    this.setState({\r\n      adding: false,\r\n      rewriting: false,\r\n    });\r\n  }\r\n}\r\nexport default Add;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Add from './components/add'\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Add></Add>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}